package mappers.is.web.bmw.sql;import java.util.List;import java.util.Map;import org.apache.ibatis.annotations.Param;import com.is.web.bmw.entity.sql.entity.Persons;import com.is.web.bmw.entity.sql.entity.Statist;/** * t_statist */public interface StatistMapper {	/**	 * 添加一条新<b>t_statist</b>记录	 * @param statist <i>Statist</i>	 * @return int	 */	public int addStatist(@Param(value="statist")Statist statist);				/**	 * 根据主键删除一条<b>t_statist</b>记录	 * @param id <i>Integer</i>	 * @return void	 *///	public void delPersonsByPrimaryKey(@Param(value="id")Integer id);		/**	 * 根据主键更新一条新<b>t_statist</b>记录	 * @param statistUpd <i>Statist 更新内容</i>	 * @return int	 */	public int updStatistByPrimaryKey(@Param(value="statist")Statist statist);		/**	 * 根据时间更新一条	 * @param statist	 * @return	 */	/*public int updStatistByYmd(@Param(value="statist")Statist statist);*/		/**	 * 根据sql语句进行查询，用户计算	 * @param statist <i>Statist</i>	 * @param String 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParamBySearch(@Param(value="selectParam")String selectParam,@Param(value="statist")Statist statist);			/**	 * 根据sql语句进行查询，自行拼凑select之后的完整sql语句	 * @param String 检索内容	 * @return Map	 */	public List<Map> getResultForSelectParam(@Param(value="selectParam")String selectParam);		/**	 * 根据主键，获取一条<b>t_statist</b>记录内容	 * @param id <i>Integer</i>	 * @return Statist	 */	public Statist getStatistByPrimaryKey(@Param(value="statist")Statist statist);		/**	 * 根据条件，查询全部<b>t_statist</b>记录	 * @param statist <i>Statist</i>	 * @return List<Statist>	 */	public List<Statist> getAllStatistBySearch(@Param(value="statist")Statist statist);		/**	 * 根据关键字对指定列进行查询，查询全部<b>t_statist</b>记录	 * @param statistList <i>List<Statist></i> 需要查询列名称、值	 * @return List<Statist>	 */	public List<Statist> getAllStatistBySearchKey(@Param(value="statistList")List<Statist> statistList);		/**	 * 根据条件，查询<b>t_statist</b>记录，带有分页	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param statist <i>Statist</i>	 * @return List<Statist>	 */	public List<Statist> getAllStatistByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="statist")Statist statist);		/**	 * 根据条件，查询符合条件<b>t_statist</b>记录总数	 * @param statist	 * @return int	 */	public int getCountForPage(@Param(value="statist")Statist statist);	/**	 * 根据关键字对指定列进行查询，查询全部<b>t_statist</b>记录	 * @param startIndex <i>int</i>	 * @param endIndex <i>int</i>	 * @param statistList <i>List<Statist></i> 查询列名称、值	 * @return List<Statist>	 */	public List<Statist> getAllStatistWithSearchKeyByPage(@Param(value="startIndex")int startIndex,			  @Param(value="endIndex")int endIndex,@Param(value="statistList")List<Statist> statistList);		/**	 * 根据关键字，查询多列数据<b>t_statist</b>记录总数	 * @param statistList <i>List<Statist></i> 查询列名称、值	 * @return int	 */	public int getCountWithSearchKeyForPage(@Param(value="statistList")List<Statist> statistList);}